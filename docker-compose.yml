services:
  gateway:
    build:
      context: ./backend/gateway
    ports:
      - "8080:8080"
    env_file:
      - .env
    depends_on:
      - auth
      - redis
    networks:
      - casino-net
    restart: unless-stopped

  auth:
    build:
      context: ./backend/auth
    env_file:
      - .env
    expose:
      - "8081"
    volumes:
      - ./backend/keys/private.pem:/app/private.pem:ro
      - ./backend/keys/public.pem:/app/public.pem:ro
    depends_on:
      - db
      - redis
    networks:
      - casino-net
    restart: unless-stopped

  ledger:
    build:
      context: ./backend/ledger
    env_file:
      - .env
    expose:
      - "8082"
    depends_on:
      - db
    networks:
      - casino-net
    restart: unless-stopped

  identity:
    build:
      context: ./backend/identity
    env_file:
      - .env
    expose:
      - "8083"
    depends_on:
      - db
      - redis
    networks:
      - casino-net
    restart: unless-stopped

  db:
    image: postgres:15
    env_file:
      - .env
    ports:
      - "5432:5432"
    volumes:
      - db_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U \"$POSTGRES_USER\" -d \"$POSTGRES_DB\""]
      interval: 10s
      timeout: 5s
      retries: 10
    networks:
      - casino-net
    restart: unless-stopped

  redis:
    image: redis:7
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 3s
      retries: 20
    networks:
      - casino-net
    restart: unless-stopped

volumes:
  db_data:

networks:
  casino-net: